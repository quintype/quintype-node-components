{"version":3,"sources":["../node_modules/load-script2/index.js","../node_modules/react-dailymotion/dist/react-dailymotion.mjs"],"names":["Dailymotion","_inheritsLoose","subClass","superClass","prototype","Object","create","constructor","__proto__","eventNames","ad_end","ad_pause","ad_play","ad_start","ad_timeupdate","apiready","durationchange","end","error","fullscreenchange","loadedmetadata","pause","play","playing","progress","qualitiesavailable","qualitychange","seeked","seeking","subtitlechange","subtitlesavailable","start","timeupdate","video_start","video_end","volumechange","waiting","sdk","loadSdk","window","DM","player","Promise","resolve","reject","err","_React$Component","props","_this","call","refContainer","container","_proto","componentDidMount","createPlayer","componentDidUpdate","prevProps","_this2","changes","keys","filter","name","updateProps","getPlayerParameters","autoplay","controls","showEndScreen","id","mute","origin","quality","autoplayQueue","showQueue","sharing","subtitles","syndication","uiHighlightColor","uiShowLogo","uiShowStartScreenInfo","uiTheme","getInitialOptions","video","width","height","params","events","propNames","_this3","then","forEach","value","setMuted","setQuality","setSubtitle","setVolume","paused","load","_this4","volume","dmName","reactName","addEventListener","event","handler","render","_this$props","className","React","createElement","ref","Component","propTypes","PropTypes","string","oneOfType","number","bool","oneOf","onAdEnd","func","onAdPause","onAdPlay","onAdStart","onAdTimeUpdate","onApiReady","onDurationChange","onEnd","onError","onFullscreenChange","onLoadedMetadata","onPause","onPlay","onPlaying","onProgress","onQualitiesAvailable","onQualityChange","onSeeked","onSeeking","onSubtitleChange","onSubtitlesAvailable","onStart","onTimeUpdate","onVideoStart","onVideoEnd","onVolumeChange","onWaiting","defaultProps"],"mappings":"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","file":"react-dailymotion.0ac93038.js","sourceRoot":"..","sourcesContent":["module.exports = load\n\nfunction load (src, cb) {\n  var head = document.head || document.getElementsByTagName('head')[0]\n  var script = document.createElement('script')\n\n  script.type = 'text/javascript'\n  script.async = true\n  script.src = src\n\n  if (cb) {\n    script.onload = function () {\n      script.onerror = script.onload = null\n      cb(null, script)\n    }\n    script.onerror = function () {\n      script.onerror = script.onload = null\n      cb(new Error('Failed to load ' + src), script)\n    }\n  }\n\n  head.appendChild(script)\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport loadScript from 'load-script2';\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar eventNames = {\n  ad_end: 'onAdEnd',\n  ad_pause: 'onAdPause',\n  ad_play: 'onAdPlay',\n  ad_start: 'onAdStart',\n  ad_timeupdate: 'onAdTimeUpdate',\n  apiready: 'onApiReady',\n  durationchange: 'onDurationChange',\n  end: 'onEnd',\n  error: 'onError',\n  fullscreenchange: 'onFullscreenChange',\n  loadedmetadata: 'onLoadedMetadata',\n  pause: 'onPause',\n  play: 'onPlay',\n  playing: 'onPlaying',\n  progress: 'onProgress',\n  qualitiesavailable: 'onQualitiesAvailable',\n  qualitychange: 'onQualityChange',\n  seeked: 'onSeeked',\n  seeking: 'onSeeking',\n  subtitlechange: 'onSubtitleChange',\n  subtitlesavailable: 'onSubtitlesAvailable',\n  start: 'onStart',\n  timeupdate: 'onTimeUpdate',\n  video_start: 'onVideoStart',\n  video_end: 'onVideoEnd',\n  volumechange: 'onVolumeChange',\n  waiting: 'onWaiting'\n};\n\nvar sdk = false;\nfunction loadSdk() {\n  if (!sdk) {\n    if (typeof window.DM === 'object' && typeof window.DM.player === 'function') {\n      // A Dailymotion SDK is already loaded, so reuse that\n      sdk = Promise.resolve(window.DM);\n    } else {\n      sdk = new Promise(function (resolve, reject) {\n        loadScript('https://api.dmcdn.net/all.js', function (err) {\n          if (err) {\n            reject(err);\n          } else {\n            resolve(window.DM);\n          }\n        });\n      });\n    }\n  }\n\n  return sdk;\n}\n\nvar Dailymotion = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Dailymotion, _React$Component);\n\n  function Dailymotion(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n\n    _this.refContainer = function (container) {\n      _this.container = container;\n    };\n\n    return _this;\n  }\n\n  var _proto = Dailymotion.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.createPlayer();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var _this2 = this;\n\n    // eslint-disable-next-line react/destructuring-assignment\n    var changes = Object.keys(this.props).filter(function (name) {\n      return _this2.props[name] !== prevProps[name];\n    });\n    this.updateProps(changes);\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.getPlayerParameters = function getPlayerParameters() {\n    /* eslint-disable react/destructuring-assignment */\n    return {\n      autoplay: this.props.autoplay,\n      controls: this.props.controls,\n      'endscreen-enable': this.props.showEndScreen,\n      id: this.props.id,\n      mute: this.props.mute,\n      origin: this.props.origin,\n      quality: this.props.quality,\n      'queue-autoplay-neext': this.props.autoplayQueue,\n      'queue-enable': this.props.showQueue,\n      'sharing-enable': this.props.sharing,\n      start: this.props.start,\n      'subtitles-default': this.props.subtitles,\n      syndication: this.props.syndication,\n      'ui-highlight': this.props.uiHighlightColor,\n      'ui-logo': this.props.uiShowLogo,\n      'ui-start-screen-info': this.props.uiShowStartScreenInfo,\n      'ui-theme': this.props.uiTheme\n    };\n    /* eslint-enable react/destructuring-assignment */\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.getInitialOptions = function getInitialOptions() {\n    /* eslint-disable react/destructuring-assignment */\n    return {\n      video: this.props.video,\n      width: this.props.width,\n      height: this.props.height,\n      params: this.getPlayerParameters(),\n      events: {}\n    };\n    /* eslint-enable react/destructuring-assignment */\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.updateProps = function updateProps(propNames) {\n    var _this3 = this;\n\n    this.player.then(function (player) {\n      propNames.forEach(function (name) {\n        // eslint-disable-next-line react/destructuring-assignment\n        var value = _this3.props[name];\n\n        switch (name) {\n          case 'mute':\n            player.setMuted(value);\n            break;\n\n          case 'quality':\n            player.setQuality(value);\n            break;\n\n          case 'subtitles':\n            player.setSubtitle(value);\n            break;\n\n          case 'volume':\n            player.setVolume(value);\n            break;\n\n          case 'paused':\n            if (value && !player.paused) {\n              player.pause();\n            } else if (!value && player.paused) {\n              player.play();\n            }\n\n            break;\n\n          case 'id':\n          case 'className':\n          case 'width':\n          case 'height':\n            // The Dailymotion Player object is also the player iframe.\n            player[name] = value; // eslint-disable-line no-param-reassign\n\n            break;\n\n          case 'video':\n            if (value) {\n              player.load(value, _this3.getPlayerParameters());\n            } else {\n              // This is just about the closest thing to an `unload()` the\n              // Dailymotion SDK has, as far as I can tell…\n              player.pause();\n            }\n\n            break;\n\n        }\n      });\n    });\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.createPlayer = function createPlayer() {\n    var _this4 = this;\n\n    var volume = this.props.volume;\n    this.player = loadSdk().then(function (DM) {\n      var player = DM.player(_this4.container, _this4.getInitialOptions());\n      Object.keys(eventNames).forEach(function (dmName) {\n        var reactName = eventNames[dmName];\n        player.addEventListener(dmName, function (event) {\n          // eslint-disable-next-line react/destructuring-assignment\n          var handler = _this4.props[reactName];\n\n          if (handler) {\n            handler(event);\n          }\n        });\n      });\n      return new Promise(function (resolve) {\n        player.addEventListener('apiready', function () {\n          resolve(player);\n        });\n      });\n    });\n\n    if (typeof volume === 'number') {\n      this.updateProps(['volume']);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        id = _this$props.id,\n        className = _this$props.className;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: id,\n      className: className,\n      ref: this.refContainer\n    });\n  };\n\n  return Dailymotion;\n}(React.Component);\n\nDailymotion.propTypes = {\n  /**\n   * A string representing a video ID – of the form xID (e.g. xwr14q) for\n   * public-accessible videos or kID (e.g. kABCD1234) for private-accessible\n   * videos.\n   */\n  video: PropTypes.string,\n\n  /**\n   * DOM ID for the player element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * CSS className for the player element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * Width of the player element.\n   */\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Height of the player element.\n   */\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Pause the video.\n   */\n  paused: PropTypes.bool,\n  // eslint-disable-line react/no-unused-prop-types\n  // Player parameters\n\n  /**\n   * Starts the playback of the video automatically after the player loads.\n   */\n  autoplay: PropTypes.bool,\n\n  /**\n   * Whether to display the player controls or not. This parameter only\n   * removes the control bar, but keeps the startscreen and the endscreen\n   * (useful on mobile devices where the video tag needs a direct user\n   * interaction to start the playback).\n   */\n  controls: PropTypes.bool,\n\n  /**\n   * Whether to enable the end screen or not.\n   */\n  showEndScreen: PropTypes.bool,\n\n  /**\n   * Whether to mute the video or not.\n   */\n  mute: PropTypes.bool,\n\n  /**\n   * The domain of the page hosting the Dailymotion player. You might want to\n   * specify origin for extra security.\n   */\n  origin: PropTypes.string,\n\n  /**\n   * Specifies the _suggested_ playback quality for the video.\n   */\n  quality: PropTypes.oneOf(['auto', '240', '380', '480', '720', '1080', '1440', '2160']),\n\n  /**\n   * Whether to show the Up Next queue.\n   */\n  showQueue: PropTypes.bool,\n\n  /**\n   * Whether to play automatically the next item in the queue.\n   */\n  autoplayQueue: PropTypes.bool,\n\n  /**\n   * Whether to display the sharing button or not.\n   */\n  sharing: PropTypes.bool,\n\n  /**\n   * Specifies the time (in seconds) from which the video should start\n   * playing.\n   */\n  start: PropTypes.number,\n\n  /**\n   * Specifies the selected subtitles language.\n   */\n  subtitles: PropTypes.string,\n\n  /**\n   * Passes your syndication key to the player.\n   */\n  syndication: PropTypes.string,\n\n  /**\n   * Change the default highlight colour used in the controls (hex value).\n   * See [the player customisation section](https://developer.dailymotion.com/player#player-customisation)\n   * in the Dailymotion docs for\n   * more on how this option is actually used.\n   */\n  uiHighlightColor: PropTypes.string,\n\n  /**\n   * Whether to display the Dailymotion logo or not.\n   */\n  uiShowLogo: PropTypes.bool,\n\n  /**\n   * Whether to show video information (title and owner) on the start screen.\n   */\n  uiShowStartScreenInfo: PropTypes.bool,\n\n  /**\n   * Choose the default base colour theme. See [the player customisation\n   * section](https://developer.dailymotion.com/player#player-customisation)\n   * in the Dailymotion docs for more on how this option is actually used.\n   */\n  uiTheme: PropTypes.oneOf(['light', 'dark']),\n  // Player properties (not parameters, can only be set using methods)\n\n  /**\n   * Sets the player's volume to the specified level, a number between 0 and\n   * 1.\n   */\n  volume: PropTypes.number,\n  // Events\n\n  /* eslint-disable react/no-unused-prop-types */\n\n  /**\n   * Sent when the player reaches the end of an Ad media resource.\n   */\n  onAdEnd: PropTypes.func,\n\n  /**\n   * Sent when an Ad playback pauses.\n   */\n  onAdPause: PropTypes.func,\n\n  /**\n   * Sent when an Ad playback starts.\n   */\n  onAdPlay: PropTypes.func,\n\n  /**\n   * Sent when the player starts to play an Ad media resource.\n   */\n  onAdStart: PropTypes.func,\n\n  /**\n   * Sent on each Ad's time update.\n   */\n  onAdTimeUpdate: PropTypes.func,\n\n  /**\n   * Sent when the player is ready to accept API commands.\n   */\n  onApiReady: PropTypes.func,\n\n  /**\n   * Sent when the duration of the video become available or change during\n   * playback.\n   */\n  onDurationChange: PropTypes.func,\n\n  /**\n   * Sent when playback has stopped at the end of the media resources set\n   * (ads + content).\n   */\n  onEnd: PropTypes.func,\n\n  /**\n   * Sent when the player triggers an error.\n   */\n  onError: PropTypes.func,\n\n  /**\n   * Sent when the player enters or exits fullscreen.\n   */\n  onFullscreenChange: PropTypes.func,\n\n  /**\n   * Sent when video's metadata are available.\n   */\n  onLoadedMetadata: PropTypes.func,\n\n  /**\n   * Sent when playback pauses after the pause method returns.\n   */\n  onPause: PropTypes.func,\n\n  /**\n   * Sent when playback starts after the `play` method returns.\n   */\n  onPlay: PropTypes.func,\n\n  /**\n   * Sent when the content media resource playback has started.\n   */\n  onPlaying: PropTypes.func,\n\n  /**\n   * Sent when the browser is fetching the media data.\n   */\n  onProgress: PropTypes.func,\n\n  /**\n   * Sent when qualities are available – see `qualities` for accepted values.\n   */\n  onQualitiesAvailable: PropTypes.func,\n\n  /**\n   * Sent when the current quality changes.\n   */\n  onQualityChange: PropTypes.func,\n\n  /**\n   * Sent when the player has completed a seeking operation.\n   */\n  onSeeked: PropTypes.func,\n\n  /**\n   * Sent when the player is starting to seek to another position in the video.\n   */\n  onSeeking: PropTypes.func,\n\n  /**\n   * Sent when the current subtitle changes.\n   */\n  onSubtitleChange: PropTypes.func,\n\n  /**\n   * Sent when subtitles are available.\n   */\n  onSubtitlesAvailable: PropTypes.func,\n\n  /**\n   * Sent the first time the player attempts to start the playback, either\n   * because of a user interaction, an autoplay parameter, or an API call\n   * (e.g play(), load(), etc.).\n   */\n  onStart: PropTypes.func,\n\n  /**\n   * Sent when the playback position changes as part of normal playback or\n   * because of some other condition.\n   */\n  onTimeUpdate: PropTypes.func,\n\n  /**\n   * Sent when the player starts to play the content media resource.\n   */\n  onVideoStart: PropTypes.func,\n\n  /**\n   * Sent when the player reaches the end of the content media resource.\n   */\n  onVideoEnd: PropTypes.func,\n\n  /**\n   * Sent when the player volume or mute state has changed.\n   */\n  onVolumeChange: PropTypes.func,\n\n  /**\n   * Sent when the player has to stop video playback for further buffering of\n   * content.\n   */\n  onWaiting: PropTypes.func\n  /* eslint-enable react/no-unused-prop-types */\n\n};\nDailymotion.defaultProps = {\n  uiTheme: 'dark',\n  quality: 'auto',\n  showQueue: false,\n  autoplayQueue: false\n};\n\nexport default Dailymotion;\n"]}